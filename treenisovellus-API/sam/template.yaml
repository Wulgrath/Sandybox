# serverless aplication model = SAM
---
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: API powered by API Gateway and Lambda using Koa
Resources:
  ApiGatewayHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowHeaders:
          - "*"
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
        MaxAge: 60
      DefaultRouteSettings:
        ThrottlingBurstLimit: 1
        ThrottlingRateLimit: 1
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
  AllowLambdaDynamoDB:
    Type: AWS::IAM::Policy
    DependsOn:
      - LambdaExecutionRole
    Properties:
      PolicyName: "AllowLambdaDynamoDB"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:*
            Resource:
              - "*"
      Roles:
        - !Ref LambdaExecutionRole
  # s3 policy mahdollistaa että voi käyttää signed urleja. signed urlit ei siis toimi jos ei ole näitä oikeuksia
  # AllowLambdaDocumentsBucket:
  #   Type: AWS::IAM::Policy
  #   DependsOn:
  #     - LambdaExecutionRole
  #   Properties:
  #     PolicyName: "AllowLambdaDocumentsBucket"
  #     PolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: Allow
  #           Action:
  #             - s3:GetObject
  #             - s3:PutObject
  #             - s3:DeleteObject
  #           Resource:
  #             - "*"
  #     Roles:
  #       - !Ref LambdaExecutionRole
  API:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../build
      Handler: index.handler
      MemorySize: 256
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs14.x
      Timeout: 30
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGatewayHttpApi
            Path: $default
            PayloadFormatVersion: "1.0"
            Method: ANY
